{"ast":null,"code":"export default {\n  props: {\n    chartData: {\n      type: Array,\n      default: () => []\n    },\n    mainProp: {\n      type: String,\n      default: \"division\"\n    },\n    subProp: {\n      type: String,\n      default: \"service\"\n    },\n    valueProp: {\n      type: String,\n      default: \"insight_engagements\"\n    }\n  },\n  data() {\n    return {\n      chartOptions: {\n        chart: {\n          backgroundColor: \"#fbfcf8\",\n          type: \"packedbubble\",\n          // width: \"100%\",\n          height: \"100%\"\n        },\n        title: {\n          text: \"Engagements\",\n          align: \"center\"\n        },\n        accessibility: {\n          enabled: false\n        },\n        exporting: {\n          enabled: true,\n          buttons: {\n            contextButton: {\n              menuItems: [\"viewFullscreen\", \"printChart\", \"separator\", \"downloadPNG\", \"downloadJPEG\", \"separator\", \"downloadPDF\", \"downloadCSV\"]\n            }\n          }\n        },\n        credits: {\n          enabled: false\n        },\n        legend: {\n          enabled: true,\n          itemStyle: {\n            color: \"#000\"\n          }\n        },\n        rangeSelector: {\n          enabled: false\n        },\n        navigator: {\n          enabled: false\n        },\n        scrollbar: {\n          enabled: false\n        },\n        tooltip: {\n          useHTML: true,\n          pointFormat: \"<b>{point.name}:</b> {point.value}\"\n        },\n        plotOptions: {\n          packedbubble: {\n            minSize: \"1%\",\n            maxSize: \"50%\",\n            zMin: 0,\n            zMax: 100,\n            layoutAlgorithm: {\n              gravitationalConstant: 0.05,\n              splitSeries: true,\n              seriesInteraction: false,\n              dragBetweenSeries: true,\n              parentNodeLimit: true\n            },\n            dataLabels: {\n              enabled: true,\n              format: \"{point.name}\",\n              style: {\n                color: \"black\",\n                textOutline: \"none\",\n                fontWeight: \"normal\"\n              }\n            }\n          }\n        }\n      },\n      fullData: []\n    };\n  },\n  watch: {\n    chartData: {\n      handler(newChartData, oldChartData) {\n        if (newChartData !== oldChartData) {\n          this.updateChartData(newChartData);\n        }\n      },\n      deep: true\n    }\n  },\n  created() {\n    this.updateChartData(this.chartData);\n  },\n  methods: {\n    updateChartData(data) {\n      this.fullData = data;\n      const getMaxValue = Math.max(...this.fullData.map(d => d[this.valueProp]));\n      const result = Object.values(this.fullData.reduce((acc, item) => {\n        const mainProp = item[this.mainProp];\n        const subProp = item[this.subProp];\n        const valueProp = item[this.valueProp];\n        if (!acc[mainProp]) acc[mainProp] = {\n          name: mainProp,\n          data: {}\n        };\n        if (!acc[mainProp].data[subProp]) acc[mainProp].data[subProp] = 0;\n        acc[mainProp].data[subProp] += valueProp;\n        return acc;\n      }, {})).map(({\n        name,\n        data\n      }) => ({\n        name,\n        data: Object.entries(data).map(([name, value]) => ({\n          name,\n          value\n        }))\n      }));\n      this.chartOptions.plotOptions.packedbubble.zMax = getMaxValue;\n      this.chartOptions.series = result;\n    }\n  }\n};","map":{"version":3,"names":["props","chartData","type","Array","default","mainProp","String","subProp","valueProp","data","chartOptions","chart","backgroundColor","height","title","text","align","accessibility","enabled","exporting","buttons","contextButton","menuItems","credits","legend","itemStyle","color","rangeSelector","navigator","scrollbar","tooltip","useHTML","pointFormat","plotOptions","packedbubble","minSize","maxSize","zMin","zMax","layoutAlgorithm","gravitationalConstant","splitSeries","seriesInteraction","dragBetweenSeries","parentNodeLimit","dataLabels","format","style","textOutline","fontWeight","fullData","watch","handler","newChartData","oldChartData","updateChartData","deep","created","methods","getMaxValue","Math","max","map","d","result","Object","values","reduce","acc","item","name","entries","value","series"],"sources":["/Users/rashmee/Desktop/usagm/heatmap/src/components/MainPackedBubble.vue"],"sourcesContent":["<template>\n  <div>\n    <highcharts\n      :constructor-type=\"'stockChart'\"\n      class=\"hc\"\n      :options=\"chartOptions\"\n      ref=\"chart\"\n    ></highcharts>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    chartData: {\n      type: Array,\n      default: () => [],\n    },\n    mainProp: {\n      type: String,\n      default: \"division\",\n    },\n    subProp: {\n      type: String,\n      default: \"service\",\n    },\n    valueProp: {\n      type: String,\n      default: \"insight_engagements\",\n    },\n  },\n  data() {\n    return {\n      chartOptions: {\n        chart: {\n          backgroundColor: \"#fbfcf8\",\n          type: \"packedbubble\",\n          // width: \"100%\",\n          height: \"100%\",\n        },\n        title: {\n          text: \"Engagements\",\n          align: \"center\",\n        },\n        accessibility: {\n          enabled: false,\n        },\n        exporting: {\n          enabled: true,\n          buttons: {\n            contextButton: {\n              menuItems: [\n                \"viewFullscreen\",\n                \"printChart\",\n                \"separator\",\n                \"downloadPNG\",\n                \"downloadJPEG\",\n                \"separator\",\n                \"downloadPDF\",\n                \"downloadCSV\",\n              ],\n            },\n          },\n        },\n        credits: {\n          enabled: false,\n        },\n        legend: {\n          enabled: true,\n          itemStyle: {\n            color: \"#000\",\n          },\n        },\n        rangeSelector: {\n          enabled: false,\n        },\n        navigator: {\n          enabled: false,\n        },\n        scrollbar: {\n          enabled: false,\n        },\n        tooltip: {\n          useHTML: true,\n          pointFormat: \"<b>{point.name}:</b> {point.value}\",\n        },\n        plotOptions: {\n          packedbubble: {\n            minSize: \"1%\",\n            maxSize: \"50%\",\n            zMin: 0,\n            zMax: 100,\n            layoutAlgorithm: {\n              gravitationalConstant: 0.05,\n              splitSeries: true,\n              seriesInteraction: false,\n              dragBetweenSeries: true,\n              parentNodeLimit: true,\n            },\n            dataLabels: {\n              enabled: true,\n              format: \"{point.name}\",\n              style: {\n                color: \"black\",\n                textOutline: \"none\",\n                fontWeight: \"normal\",\n              },\n            },\n          },\n        },\n      },\n      fullData: [],\n    };\n  },\n  watch: {\n    chartData: {\n      handler(newChartData, oldChartData) {\n        if (newChartData !== oldChartData) {\n          this.updateChartData(newChartData);\n        }\n      },\n      deep: true,\n    },\n  },\n  created() {\n    this.updateChartData(this.chartData);\n  },\n  methods: {\n    updateChartData(data) {\n      this.fullData = data;\n      const getMaxValue = Math.max(\n        ...this.fullData.map((d) => d[this.valueProp])\n      );\n      const result = Object.values(\n        this.fullData.reduce((acc, item) => {\n          const mainProp = item[this.mainProp];\n          const subProp = item[this.subProp];\n          const valueProp = item[this.valueProp];\n          if (!acc[mainProp]) acc[mainProp] = { name: mainProp, data: {} };\n          if (!acc[mainProp].data[subProp]) acc[mainProp].data[subProp] = 0;\n          acc[mainProp].data[subProp] += valueProp;\n          return acc;\n        }, {})\n      ).map(({ name, data }) => ({\n        name,\n        data: Object.entries(data).map(([name, value]) => ({ name, value })),\n      }));\n      this.chartOptions.plotOptions.packedbubble.zMax = getMaxValue;\n      this.chartOptions.series = result;\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}