{"ast":null,"code":"import \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport moment from \"moment\";\nexport default {\n  props: {\n    chartData: {\n      type: Array,\n      default: () => []\n    },\n    metrics: {\n      type: Array,\n      default: () => [{\n        name: \"Visits\",\n        property: \"visits\",\n        color: \"#da70d6\"\n      }, {\n        name: \"Article Views\",\n        property: \"article_views\",\n        color: \"#ff7f50\"\n      }, {\n        name: \"Return Visits\",\n        property: \"return_visits\",\n        color: \"#ffd700\"\n      }, {\n        name: \"Audio Play\",\n        property: \"audio_play\",\n        color: \"#20b2aa\"\n      }, {\n        name: \"Video Play\",\n        property: \"video_play\",\n        color: \"#6b8e23\"\n      }]\n    }\n  },\n  data() {\n    return {\n      fullData: []\n    };\n  },\n  watch: {\n    chartData: {\n      handler(newChartData, oldChartData) {\n        if (newChartData !== oldChartData) {\n          this.updateChartData(newChartData);\n        }\n      },\n      deep: true\n    }\n  },\n  created() {\n    this.updateChartData(this.chartData);\n  },\n  methods: {\n    updateChartData(data) {\n      this.fullData = data;\n      this.metrics.forEach(metric => {\n        metric.value = this.fullData.reduce((acc, item) => acc + item[metric.property], 0);\n      });\n    },\n    getChartOptions(property) {\n      const categories = [...new Set(this.fullData.map(dt => moment(dt.report_date).format(\"ll\")))];\n      const groupedData = this.fullData.reduce((acc, item) => {\n        const date = item.report_date;\n        if (!acc[date]) {\n          acc[date] = {};\n        }\n        acc[date][property] = (acc[date][property] || 0) + item[property];\n        return acc;\n      }, {});\n      const aggregatedValues = Object.entries(groupedData).map(([date, values]) => ({\n        name: moment(date).format(\"lll\"),\n        y: values[property]\n      }));\n      const seriesName = property.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\n      const color = this.metrics.find(metric => metric.property === property)?.color;\n      return {\n        chart: {\n          type: \"areaspline\",\n          height: \"45%\"\n        },\n        rangeSelector: {\n          enabled: false\n        },\n        navigator: {\n          enabled: false\n        },\n        scrollbar: {\n          enabled: false\n        },\n        accessibility: {\n          enabled: false\n        },\n        title: {\n          text: \"\"\n        },\n        xAxis: {\n          visible: false,\n          categories: categories\n        },\n        yAxis: {\n          visible: false\n        },\n        legend: {\n          enabled: false\n        },\n        credits: {\n          enabled: false\n        },\n        exporting: {\n          enabled: false\n        },\n        tooltip: {\n          backgroundColor: \"#fbfcf8\",\n          style: {\n            color: \"#000\"\n          },\n          formatter: function () {\n            return `<b><u>${moment(this.x).format(\"MMM D YYYY\")}</u></b><br/>` + this.points.map(point => `${point.y.toLocaleString()}`).join(\"<br/>\");\n          },\n          shared: false,\n          useHTML: true\n        },\n        plotOptions: {\n          series: {\n            fillOpacity: 0,\n            marker: {\n              enabled: false,\n              states: {\n                hover: {\n                  enabled: true\n                }\n              }\n            }\n          }\n        },\n        series: [{\n          name: seriesName,\n          data: aggregatedValues,\n          color: color\n        }]\n      };\n    },\n    formatNumber(value) {\n      const numericSymbols = [\"K\", \"M\", \"B\", \"T\", \"P\", \"E\"];\n      if (value >= 1000) {\n        const symbolIndex = Math.floor(Math.log10(value) / 3);\n        const scaledValue = value / Math.pow(1000, symbolIndex);\n        const symbol = numericSymbols[symbolIndex - 1];\n        return `${scaledValue.toFixed(1)}${symbol}`;\n      }\n      return value.toString();\n    }\n  }\n};","map":{"version":3,"names":["moment","props","chartData","type","Array","default","metrics","name","property","color","data","fullData","watch","handler","newChartData","oldChartData","updateChartData","deep","created","methods","forEach","metric","value","reduce","acc","item","getChartOptions","categories","Set","map","dt","report_date","format","groupedData","date","aggregatedValues","Object","entries","values","y","seriesName","split","word","charAt","toUpperCase","slice","join","find","chart","height","rangeSelector","enabled","navigator","scrollbar","accessibility","title","text","xAxis","visible","yAxis","legend","credits","exporting","tooltip","backgroundColor","style","formatter","x","points","point","toLocaleString","shared","useHTML","plotOptions","series","fillOpacity","marker","states","hover","formatNumber","numericSymbols","symbolIndex","Math","floor","log10","scaledValue","pow","symbol","toFixed","toString"],"sources":["/Users/rashmee/Desktop/usagm/heatmap/src/components/MainTotalsTrends.vue"],"sourcesContent":["<template>\n  <div class=\"w-100 clearfix d-flex\">\n    <div\n      v-for=\"(metric, index) in metrics\"\n      :key=\"index\"\n      class=\"card float-start flex-fill\"\n    >\n      <div class=\"card-header\">{{ metric.name }}</div>\n      <div class=\"card-body w-100 clearfix d-flex\">\n        <h6\n          class=\"float-start align-self-center\"\n          :style=\"{ color: metric.color, width: '35%' }\"\n        >\n          {{ formatNumber(metric.value) }}\n        </h6>\n        <highcharts\n          style=\"width: 65%\"\n          :constructor-type=\"'stockChart'\"\n          class=\"hc float-start align-self-center\"\n          :options=\"getChartOptions(metric.property)\"\n          ref=\"chart\"\n        ></highcharts>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\n\nexport default {\n  props: {\n    chartData: {\n      type: Array,\n      default: () => [],\n    },\n    metrics: {\n      type: Array,\n      default: () => [\n        { name: \"Visits\", property: \"visits\", color: \"#da70d6\" },\n        { name: \"Article Views\", property: \"article_views\", color: \"#ff7f50\" },\n        { name: \"Return Visits\", property: \"return_visits\", color: \"#ffd700\" },\n        { name: \"Audio Play\", property: \"audio_play\", color: \"#20b2aa\" },\n        { name: \"Video Play\", property: \"video_play\", color: \"#6b8e23\" },\n      ],\n    },\n  },\n  data() {\n    return {\n      fullData: [],\n    };\n  },\n  watch: {\n    chartData: {\n      handler(newChartData, oldChartData) {\n        if (newChartData !== oldChartData) {\n          this.updateChartData(newChartData);\n        }\n      },\n      deep: true,\n    },\n  },\n  created() {\n    this.updateChartData(this.chartData);\n  },\n  methods: {\n    updateChartData(data) {\n      this.fullData = data;\n      this.metrics.forEach((metric) => {\n        metric.value = this.fullData.reduce(\n          (acc, item) => acc + item[metric.property],\n          0\n        );\n      });\n    },\n    getChartOptions(property) {\n      const categories = [\n        ...new Set(\n          this.fullData.map((dt) => moment(dt.report_date).format(\"ll\"))\n        ),\n      ];\n\n      const groupedData = this.fullData.reduce((acc, item) => {\n        const date = item.report_date;\n        if (!acc[date]) {\n          acc[date] = {};\n        }\n        acc[date][property] = (acc[date][property] || 0) + item[property];\n        return acc;\n      }, {});\n\n      const aggregatedValues = Object.entries(groupedData).map(\n        ([date, values]) => ({\n          name: moment(date).format(\"lll\"),\n          y: values[property],\n        })\n      );\n\n      const seriesName = property\n        .split(\"_\")\n        .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(\" \");\n\n      const color = this.metrics.find(\n        (metric) => metric.property === property\n      )?.color;\n\n      return {\n        chart: {\n          type: \"areaspline\",\n          height: \"45%\",\n        },\n        rangeSelector: {\n          enabled: false,\n        },\n        navigator: {\n          enabled: false,\n        },\n        scrollbar: {\n          enabled: false,\n        },\n        accessibility: {\n          enabled: false,\n        },\n        title: {\n          text: \"\",\n        },\n        xAxis: {\n          visible: false,\n          categories: categories,\n        },\n        yAxis: {\n          visible: false,\n        },\n        legend: {\n          enabled: false,\n        },\n        credits: {\n          enabled: false,\n        },\n        exporting: {\n          enabled: false,\n        },\n        tooltip: {\n          backgroundColor: \"#fbfcf8\",\n          style: { color: \"#000\" },\n          formatter: function () {\n            return (\n              `<b><u>${moment(this.x).format(\"MMM D YYYY\")}</u></b><br/>` +\n              this.points\n                .map((point) => `${point.y.toLocaleString()}`)\n                .join(\"<br/>\")\n            );\n          },\n          shared: false,\n          useHTML: true,\n        },\n        plotOptions: {\n          series: {\n            fillOpacity: 0,\n            marker: {\n              enabled: false,\n              states: {\n                hover: {\n                  enabled: true,\n                },\n              },\n            },\n          },\n        },\n        series: [\n          {\n            name: seriesName,\n            data: aggregatedValues,\n            color: color,\n          },\n        ],\n      };\n    },\n    formatNumber(value) {\n      const numericSymbols = [\"K\", \"M\", \"B\", \"T\", \"P\", \"E\"];\n\n      if (value >= 1000) {\n        const symbolIndex = Math.floor(Math.log10(value) / 3);\n        const scaledValue = value / Math.pow(1000, symbolIndex);\n        const symbol = numericSymbols[symbolIndex - 1];\n        return `${scaledValue.toFixed(1)}${symbol}`;\n      }\n\n      return value.toString();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.card {\n  margin: 1rem;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}