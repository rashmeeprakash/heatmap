{"ast":null,"code":"import \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport moment from \"moment\";\nexport default {\n  props: {\n    chartData: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      chartOptions: {\n        chart: {\n          backgroundColor: \"#fbfcf8\",\n          type: \"heatmap\",\n          plotBorderWidth: 1,\n          height: \"100%\",\n          margin: [0, 0, 0, 0]\n        },\n        title: {\n          text: \"Video Views\",\n          align: \"center\"\n        },\n        exporting: {\n          enabled: true,\n          buttons: {\n            contextButton: {\n              menuItems: [\"viewFullscreen\", \"printChart\", \"separator\", \"downloadPNG\", \"downloadJPEG\", \"separator\", \"downloadPDF\", \"downloadCSV\"]\n            }\n          }\n        },\n        credits: {\n          enabled: false\n        },\n        legend: {\n          enabled: true,\n          itemStyle: {\n            color: \"#000\"\n          }\n        },\n        rangeSelector: {\n          enabled: false\n        },\n        navigator: {\n          enabled: false\n        },\n        scrollbar: {\n          enabled: false\n        },\n        xAxis: {\n          categories: []\n        },\n        yAxis: {\n          categories: [],\n          reversed: false\n        },\n        accessibility: {\n          point: {\n            descriptionFormat: \"{(add index 1)}. {series.xAxis.categories.(x)} {series.yAxis.categories.(y)}, {value}.\"\n          }\n        },\n        colorAxis: {\n          min: 0,\n          minColor: \"#FFFFFF\",\n          maxColor: \"#DA70D6\"\n        },\n        tooltip: {\n          style: {\n            color: \"#000\"\n          }\n        },\n        series: [{\n          name: \"Video Views\",\n          borderWidth: 1,\n          data: [],\n          dataLabels: {\n            enabled: true,\n            color: \"#000000\"\n          }\n        }],\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 500\n            },\n            chartOptions: {\n              yAxis: {\n                labels: {\n                  format: \"{substr value 0 1}\"\n                }\n              }\n            }\n          }]\n        }\n      },\n      fullData: []\n    };\n  },\n  watch: {\n    chartData: {\n      handler(newChartData, oldChartData) {\n        if (newChartData !== oldChartData) {\n          this.updateChartData(newChartData);\n        }\n      },\n      deep: true\n    }\n  },\n  created() {\n    this.updateChartData(this.chartData);\n  },\n  methods: {\n    updateChartData(data) {\n      this.fullData = data;\n      const categories = [...new Set(this.fullData.map(dt => moment(dt.report_date).format(\"ll\")).sort((a, b) => moment(a, \"ll\").valueOf() - moment(b, \"ll\").valueOf()))];\n      const transformedData = this.getPropertiesSeries();\n      this.chartOptions.xAxis.categories = categories;\n      this.chartOptions.series = transformedData;\n    },\n    getPropertiesSeries() {\n      const properties = [{\n        prop: \"visits\",\n        color: \"#DA70D6\"\n      }, {\n        prop: \"article_views\",\n        color: \"#FF7F50\"\n      }, {\n        prop: \"return_visits\",\n        color: \"#FFD700\"\n      }, {\n        prop: \"audio_play\",\n        color: \"#20B2AA\"\n      }, {\n        prop: \"video_play\",\n        color: \"#6B8E23\"\n      }\n      //      { prop: \"time_spent_per_visit\", color: \"#ff0000\", yAxis: 1 },\n      ];\n      return properties.map(({\n        prop,\n        color,\n        yAxis\n      }) => {\n        const groupedData = this.fullData.reduce((acc, item) => {\n          const date = item.report_date;\n          if (!acc[date]) {\n            acc[date] = {};\n          }\n          acc[date][prop] = (acc[date][prop] || 0) + item[prop];\n          return acc;\n        }, {});\n        const aggregatedValues = Object.entries(groupedData).map(([date, values]) => ({\n          name: moment(date).format(\"lll\"),\n          y: values[prop]\n        }));\n        return {\n          name: prop.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \"),\n          data: aggregatedValues,\n          color: color,\n          yAxis: yAxis || 0\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["moment","props","chartData","type","Array","default","data","chartOptions","chart","backgroundColor","plotBorderWidth","height","margin","title","text","align","exporting","enabled","buttons","contextButton","menuItems","credits","legend","itemStyle","color","rangeSelector","navigator","scrollbar","xAxis","categories","yAxis","reversed","accessibility","point","descriptionFormat","colorAxis","min","minColor","maxColor","tooltip","style","series","name","borderWidth","dataLabels","responsive","rules","condition","maxWidth","labels","format","fullData","watch","handler","newChartData","oldChartData","updateChartData","deep","created","methods","Set","map","dt","report_date","sort","a","b","valueOf","transformedData","getPropertiesSeries","properties","prop","groupedData","reduce","acc","item","date","aggregatedValues","Object","entries","values","y","split","word","charAt","toUpperCase","slice","join"],"sources":["/Users/rashmee/Desktop/usagm/heatmap/src/components/WebTab/HeatMap.vue"],"sourcesContent":["<template>\n  <div>\n    <highcharts\n      :constructor-type=\"'stockChart'\"\n      class=\"hc\"\n      :options=\"chartOptions\"\n      ref=\"chart\"\n    ></highcharts>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\n\nexport default {\n  props: {\n    chartData: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      chartOptions: {\n        chart: {\n          backgroundColor: \"#fbfcf8\",\n          type: \"heatmap\",\n          plotBorderWidth: 1,\n          height: \"100%\",\n          margin: [0, 0, 0, 0],\n        },\n        title: { text: \"Video Views\", align: \"center\" },\n        exporting: {\n          enabled: true,\n          buttons: {\n            contextButton: {\n              menuItems: [\n                \"viewFullscreen\",\n                \"printChart\",\n                \"separator\",\n                \"downloadPNG\",\n                \"downloadJPEG\",\n                \"separator\",\n                \"downloadPDF\",\n                \"downloadCSV\",\n              ],\n            },\n          },\n        },\n        credits: { enabled: false },\n        legend: { enabled: true, itemStyle: { color: \"#000\" } },\n        rangeSelector: { enabled: false },\n        navigator: { enabled: false },\n        scrollbar: { enabled: false },\n        xAxis: { categories: [] },\n        yAxis: { categories: [], reversed: false },\n        accessibility: {\n          point: {\n            descriptionFormat:\n              \"{(add index 1)}. {series.xAxis.categories.(x)} {series.yAxis.categories.(y)}, {value}.\",\n          },\n        },\n        colorAxis: { min: 0, minColor: \"#FFFFFF\", maxColor: \"#DA70D6\" },\n        tooltip: { style: { color: \"#000\" } },\n        series: [\n          {\n            name: \"Video Views\",\n            borderWidth: 1,\n            data: [],\n            dataLabels: { enabled: true, color: \"#000000\" },\n          },\n        ],\n        responsive: {\n          rules: [\n            {\n              condition: { maxWidth: 500 },\n              chartOptions: {\n                yAxis: { labels: { format: \"{substr value 0 1}\" } },\n              },\n            },\n          ],\n        },\n      },\n      fullData: [],\n    };\n  },\n  watch: {\n    chartData: {\n      handler(newChartData, oldChartData) {\n        if (newChartData !== oldChartData) {\n          this.updateChartData(newChartData);\n        }\n      },\n      deep: true,\n    },\n  },\n  created() {\n    this.updateChartData(this.chartData);\n  },\n  methods: {\n    updateChartData(data) {\n      this.fullData = data;\n      const categories = [\n        ...new Set(\n          this.fullData\n            .map((dt) => moment(dt.report_date).format(\"ll\"))\n            .sort(\n              (a, b) => moment(a, \"ll\").valueOf() - moment(b, \"ll\").valueOf()\n            )\n        ),\n      ];\n\n      const transformedData = this.getPropertiesSeries();\n\n      this.chartOptions.xAxis.categories = categories;\n      this.chartOptions.series = transformedData;\n    },\n    getPropertiesSeries() {\n      const properties = [\n        { prop: \"visits\", color: \"#DA70D6\" },\n        { prop: \"article_views\", color: \"#FF7F50\" },\n        { prop: \"return_visits\", color: \"#FFD700\" },\n        { prop: \"audio_play\", color: \"#20B2AA\" },\n        { prop: \"video_play\", color: \"#6B8E23\" },\n        //      { prop: \"time_spent_per_visit\", color: \"#ff0000\", yAxis: 1 },\n      ];\n\n      return properties.map(({ prop, color, yAxis }) => {\n        const groupedData = this.fullData.reduce((acc, item) => {\n          const date = item.report_date;\n          if (!acc[date]) {\n            acc[date] = {};\n          }\n          acc[date][prop] = (acc[date][prop] || 0) + item[prop];\n          return acc;\n        }, {});\n\n        const aggregatedValues = Object.entries(groupedData).map(\n          ([date, values]) => ({\n            name: moment(date).format(\"lll\"),\n            y: values[prop],\n          })\n        );\n\n        return {\n          name: prop\n            .split(\"_\")\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(\" \"),\n          data: aggregatedValues,\n          color: color,\n          yAxis: yAxis || 0,\n        };\n      });\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}