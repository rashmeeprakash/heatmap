{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"filters\",\n  class: \"m-2\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"typo__label mt-2\"\n}, \"Select Divisions:\", -1);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"typo__label mt-2\"\n}, \"Select Services:\", -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_DateRangePicker = _resolveComponent(\"DateRangePicker\");\n  const _component_multiselect = _resolveComponent(\"multiselect\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_DateRangePicker, {\n    ref: \"picker\",\n    modelValue: $data.dateRange,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.dateRange = $event),\n    opens: \"inline\",\n    \"show-dropdowns\": \"true\",\n    \"auto-apply\": \"true\",\n    \"single-date-picker\": \"range\",\n    \"date-range\": $data.dateRange,\n    ranges: $data.customRanges,\n    onSelect: $options.handleDateRangeChange\n  }, null, 8, [\"modelValue\", \"date-range\", \"ranges\", \"onSelect\"]), _hoisted_2, _createVNode(_component_multiselect, {\n    id: \"divisions\",\n    class: \"mt-1\",\n    modelValue: $data.selectedDivisions,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedDivisions = $event),\n    placeholder: \"Select Division\",\n    options: $data.divisions,\n    multiple: true,\n    \"close-on-select\": false,\n    \"group-values\": \"libs\",\n    \"group-label\": \"all\",\n    \"group-select\": true,\n    limit: $data.limitNum,\n    \"limit-text\": $options.limitDivisions,\n    onClose: $options.handleDivisionSelect\n  }, null, 8, [\"modelValue\", \"options\", \"limit\", \"limit-text\", \"onClose\"]), _hoisted_3, _createVNode(_component_multiselect, {\n    id: \"services\",\n    class: \"mt-1\",\n    modelValue: $data.selectedServices,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedServices = $event),\n    placeholder: \"Select Services\",\n    options: $data.services,\n    multiple: true,\n    \"close-on-select\": false,\n    \"group-values\": \"libs\",\n    \"group-label\": \"all\",\n    \"group-select\": true,\n    limit: $data.limitNum,\n    \"limit-text\": $options.limitServices,\n    onClose: $options.handleServicesSelect\n  }, null, 8, [\"modelValue\", \"options\", \"limit\", \"limit-text\", \"onClose\"])]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_DateRangePicker","ref","modelValue","$data","dateRange","_cache","$event","opens","ranges","customRanges","onSelect","$options","handleDateRangeChange","_hoisted_2","_component_multiselect","selectedDivisions","placeholder","options","divisions","multiple","limit","limitNum","limitDivisions","onClose","handleDivisionSelect","_hoisted_3","selectedServices","services","limitServices","handleServicesSelect"],"sources":["/Users/rashmee/Desktop/usagm/heatmap/src/components/BaseElements.vue"],"sourcesContent":["<template>\n  <div id=\"filters\" class=\"m-2\">\n    <DateRangePicker\n      ref=\"picker\"\n      v-model=\"dateRange\"\n      opens=\"inline\"\n      show-dropdowns=\"true\"\n      auto-apply=\"true\"\n      single-date-picker=\"range\"\n      :date-range=\"dateRange\"\n      :ranges=\"customRanges\"\n      @select=\"handleDateRangeChange\"\n    >\n    </DateRangePicker>\n\n    <label class=\"typo__label mt-2\">Select Divisions:</label>\n    <multiselect\n      id=\"divisions\"\n      class=\"mt-1\"\n      v-model=\"selectedDivisions\"\n      placeholder=\"Select Division\"\n      :options=\"divisions\"\n      :multiple=\"true\"\n      :close-on-select=\"false\"\n      group-values=\"libs\"\n      group-label=\"all\"\n      :group-select=\"true\"\n      :limit=\"limitNum\"\n      :limit-text=\"limitDivisions\"\n      @close=\"handleDivisionSelect\"\n    ></multiselect>\n\n    <label class=\"typo__label mt-2\">Select Services:</label>\n    <multiselect\n      id=\"services\"\n      class=\"mt-1\"\n      v-model=\"selectedServices\"\n      placeholder=\"Select Services\"\n      :options=\"services\"\n      :multiple=\"true\"\n      :close-on-select=\"false\"\n      group-values=\"libs\"\n      group-label=\"all\"\n      :group-select=\"true\"\n      :limit=\"limitNum\"\n      :limit-text=\"limitServices\"\n      @close=\"handleServicesSelect\"\n    ></multiselect>\n  </div>\n</template>\n\n<script>\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport DateRangePicker from \"vue3-daterange-picker\";\nimport moment from \"moment\";\nimport Multiselect from \"vue-multiselect\";\nimport axios from \"axios\";\nexport default {\n  components: { DateRangePicker, Multiselect },\n  props: {\n    startDate: {\n      type: String,\n      required: true,\n    },\n    endDate: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      dateRange: {\n        startDate: this.startDate,\n        endDate: this.endDate,\n      },\n      limitNum: 3,\n      selectedDivisions: [],\n      selectedServices: [],\n      divisions: [],\n      services: [],\n      totalDivisions: 0,\n      totalServices: 0,\n      customRanges: {\n        \"This Week\": [moment().startOf(\"week\")._d, moment().endOf(\"week\")._d],\n        \"Last Week\": [\n          moment().subtract(1, \"week\").startOf(\"week\")._d,\n          moment().subtract(1, \"week\").endOf(\"week\")._d,\n        ],\n        \"This Month\": [\n          moment().startOf(\"month\")._d,\n          moment().endOf(\"month\")._d,\n        ],\n        \"Last Month\": [\n          moment().subtract(1, \"month\").startOf(\"month\")._d,\n          moment().subtract(1, \"month\").endOf(\"month\")._d,\n        ],\n        \"This Quarter\": [\n          moment().startOf(\"quarter\")._d,\n          moment().endOf(\"quarter\")._d,\n        ],\n        \"Last Quarter\": [\n          moment().subtract(1, \"quarter\").startOf(\"quarter\")._d,\n          moment().subtract(1, \"quarter\").endOf(\"quarter\")._d,\n        ],\n        \"This Year\": [moment().startOf(\"year\")._d, moment().endOf(\"year\")._d],\n        \"Last Year\": [\n          moment().subtract(1, \"year\").startOf(\"year\")._d,\n          moment().subtract(1, \"year\").endOf(\"year\")._d,\n        ],\n      },\n    };\n  },\n  mounted() {\n    this.loadData(this.dateRange.startDate, this.dateRange.endDate);\n  },\n  methods: {\n    handleDateRangeChange(value) {\n      this.dateRange.startDate = value.startDate;\n      this.dateRange.endDate = value.endDate;\n\n      this.$emit(\"date-range-changed\", {\n        startDate: this.dateRange.startDate,\n        endDate: this.dateRange.endDate,\n        divSelected: this.selectedDivisions,\n        serviceSelected: this.selectedServices,\n      });\n    },\n    handleDivisionSelect() {\n      this.$emit(\"division-changed\", {\n        startDate: this.dateRange.startDate,\n        endDate: this.dateRange.endDate,\n        divSelected: this.selectedDivisions,\n        serviceSelected: this.selectedServices,\n      });\n    },\n    handleServicesSelect() {\n      this.$emit(\"service-changed\", {\n        startDate: this.dateRange.startDate,\n        endDate: this.dateRange.endDate,\n        divSelected: this.selectedDivisions,\n        serviceSelected: this.selectedServices,\n      });\n    },\n    loadData(startDate, endDate) {\n      const baseURL =\n        window.location.hostname === \"localhost\"\n          ? \"http://localhost:3001/api\"\n          : \"https://opr-voa.azurewebsites.net/api\";\n      if (!baseURL) {\n        console.error(\"VUE_APP_API_BASE_URL is not defined\");\n        return;\n      }\n      const url = `${baseURL}/filters?startDate=${moment(startDate).format(\n        \"YYYY-MM-DD\"\n      )}&endDate=${moment(endDate).format(\"YYYY-MM-DD\")}`;\n\n      axios\n        .get(url)\n        .then((response) => {\n          this.divisions = [\n            {\n              all: \"Select All/Deselect All\",\n              libs: [...new Set(response.data.map((d) => d.division))].sort(\n                (a, b) => a.localeCompare(b)\n              ),\n            },\n          ];\n          this.services = [\n            {\n              all: \"Select All/Deselect All\",\n              libs: [...new Set(response.data.map((d) => d.service))].sort(\n                (a, b) => a.localeCompare(b)\n              ),\n            },\n          ];\n          this.selectedDivisions = [\n            ...new Set(response.data.map((d) => d.division)),\n          ];\n\n          this.selectedServices = [\n            ...new Set(response.data.map((d) => d.service)),\n          ];\n\n          this.totalDivisions = this.selectedDivisions.length;\n          this.totalServices = this.selectedServices.length;\n        })\n        .catch((error) => {\n          console.error(\"Error loading data:\", error);\n        });\n    },\n    limitDivisions(count) {\n      let msg =\n        this.limitNum + count === this.totalDivisions\n          ? \"... all divisions selected\"\n          : `and ${count} other divisions`;\n      return msg;\n    },\n    limitServices(count) {\n      let msg =\n        this.limitNum + count === this.totalServices\n          ? \"... all services selected\"\n          : `and ${count} other services`;\n      return msg;\n    },\n  },\n};\n</script>\n<style\n  src=\"../../node_modules/vue-multiselect/dist/vue-multiselect.css\"\n></style>\n<style>\n.daterangepicker.single.show-ranges {\n  min-width: 100% !important;\n}\n\n.vue-daterange-picker,\n.calendars {\n  width: 100% !important;\n}\n\n.ranges {\n  width: 30% !important;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.ranges ul {\n  list-style-type: none; /* Removes bullet points */\n  padding: 0;\n  margin: 0;\n  text-align: center; /* Centers text within the list items */\n}\n\n.calendars-container {\n  width: 70% !important;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.calendars-container .drp-calendar {\n  padding: 0;\n  margin: 0;\n  text-align: center;\n}\n\n.reportrange-text {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.reportrange-text span {\n  padding: 0;\n  margin: 0;\n  text-align: center;\n}\n\n/* Add your component-specific styles here */\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC,SAAS;EAACC,KAAK,EAAC;;gCActBC,mBAAA,CAAyD;EAAlDD,KAAK,EAAC;AAAkB,GAAC,mBAAiB;gCAiBjDC,mBAAA,CAAwD;EAAjDD,KAAK,EAAC;AAAkB,GAAC,kBAAgB;;;;uBA/BlDE,mBAAA,CA+CM,OA/CNC,UA+CM,GA9CJC,YAAA,CAWkBC,0BAAA;IAVhBC,GAAG,EAAC,QAAQ;IAHlBC,UAAA,EAIeC,KAAA,CAAAC,SAAS;IAJxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIeH,KAAA,CAAAC,SAAS,GAAAE,MAAA;IAClBC,KAAK,EAAC,QAAQ;IACd,gBAAc,EAAC,MAAM;IACrB,YAAU,EAAC,MAAM;IACjB,oBAAkB,EAAC,OAAO;IACzB,YAAU,EAAEJ,KAAA,CAAAC,SAAS;IACrBI,MAAM,EAAEL,KAAA,CAAAM,YAAY;IACpBC,QAAM,EAAEC,QAAA,CAAAC;mEAIXC,UAAyD,EACzDd,YAAA,CAcee,sBAAA;IAbbpB,EAAE,EAAC,WAAW;IACdC,KAAK,EAAC,MAAM;IAlBlBO,UAAA,EAmBeC,KAAA,CAAAY,iBAAiB;IAnBhC,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAmBeH,KAAA,CAAAY,iBAAiB,GAAAT,MAAA;IAC1BU,WAAW,EAAC,iBAAiB;IAC5BC,OAAO,EAAEd,KAAA,CAAAe,SAAS;IAClBC,QAAQ,EAAE,IAAI;IACd,iBAAe,EAAE,KAAK;IACvB,cAAY,EAAC,MAAM;IACnB,aAAW,EAAC,KAAK;IAChB,cAAY,EAAE,IAAI;IAClBC,KAAK,EAAEjB,KAAA,CAAAkB,QAAQ;IACf,YAAU,EAAEV,QAAA,CAAAW,cAAc;IAC1BC,OAAK,EAAEZ,QAAA,CAAAa;4EAGVC,UAAwD,EACxD1B,YAAA,CAcee,sBAAA;IAbbpB,EAAE,EAAC,UAAU;IACbC,KAAK,EAAC,MAAM;IAnClBO,UAAA,EAoCeC,KAAA,CAAAuB,gBAAgB;IApC/B,uBAAArB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoCeH,KAAA,CAAAuB,gBAAgB,GAAApB,MAAA;IACzBU,WAAW,EAAC,iBAAiB;IAC5BC,OAAO,EAAEd,KAAA,CAAAwB,QAAQ;IACjBR,QAAQ,EAAE,IAAI;IACd,iBAAe,EAAE,KAAK;IACvB,cAAY,EAAC,MAAM;IACnB,aAAW,EAAC,KAAK;IAChB,cAAY,EAAE,IAAI;IAClBC,KAAK,EAAEjB,KAAA,CAAAkB,QAAQ;IACf,YAAU,EAAEV,QAAA,CAAAiB,aAAa;IACzBL,OAAK,EAAEZ,QAAA,CAAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}