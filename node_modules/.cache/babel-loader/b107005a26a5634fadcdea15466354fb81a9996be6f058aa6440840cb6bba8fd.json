{"ast":null,"code":"import \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport moment from \"moment\";\nexport default {\n  props: {\n    chartData: {\n      type: Array,\n      default: () => []\n    },\n    properties: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      chartOptions: {\n        chart: {\n          backgroundColor: \"#fbfcf8\",\n          type: \"column\",\n          zoomType: \"x\",\n          height: \"100%\"\n        },\n        title: {\n          text: \"Fans Change\",\n          align: \"center\"\n        },\n        accessibility: {\n          enabled: false\n        },\n        exporting: {\n          enabled: true,\n          buttons: {\n            contextButton: {\n              menuItems: [\"viewFullscreen\", \"printChart\", \"separator\", \"downloadPNG\", \"downloadJPEG\", \"separator\", \"downloadPDF\", \"downloadCSV\"]\n            }\n          }\n        },\n        credits: {\n          enabled: false\n        },\n        legend: {\n          enabled: true,\n          itemStyle: {\n            color: \"#000\"\n          }\n        },\n        rangeSelector: {\n          enabled: false\n        },\n        navigator: {\n          enabled: false\n        },\n        scrollbar: {\n          enabled: false\n        },\n        xAxis: {\n          tickInterval: 2,\n          categories: [],\n          labels: {\n            style: {\n              color: \"#000\"\n            }\n          },\n          lineColor: \"#000\",\n          lineWidth: 3,\n          showLastLabel: false,\n          startOnTick: true,\n          endOnTick: true\n        },\n        yAxis: {\n          gridLineColor: \"#fbfcf8\",\n          lineColor: \"#000\",\n          lineWidth: 3,\n          showFirstLabel: false,\n          labels: {\n            style: {\n              color: \"#000\"\n            },\n            formatter() {\n              const numericSymbols = [\"K\", \"M\", \"G\", \"T\", \"P\", \"E\"];\n              if (this.value >= 1000) {\n                const symbolIndex = Math.floor(Math.log10(this.value) / 3);\n                const scaledValue = this.value / Math.pow(1000, symbolIndex);\n                const symbol = numericSymbols[symbolIndex - 1];\n                return `${scaledValue}${symbol}`;\n              }\n              return this.value;\n            }\n          },\n          title: {\n            text: \"\"\n          },\n          opposite: false\n        },\n        tooltip: {\n          backgroundColor: \"#fbfcf8\",\n          style: {\n            color: \"#000\"\n          },\n          formatter() {\n            return `<b><u>${moment(this.x).format(\"ddd, MMM D YYYY\")}</u></b><br/><br/>` + this.points.map(point => `${point.series.name}: ${point.y.toLocaleString()}`).join(\"<br/>\");\n          },\n          shared: true,\n          useHTML: true\n        },\n        plotOptions: {\n          column: {\n            borderRadius: \"25%\"\n          }\n        },\n        series: []\n      },\n      fullData: []\n    };\n  },\n  watch: {\n    chartData: {\n      handler(newChartData, oldChartData) {\n        if (newChartData !== oldChartData) {\n          this.updateChartData(newChartData);\n        }\n      },\n      deep: true\n    }\n  },\n  created() {\n    this.updateChartData(this.chartData);\n  },\n  methods: {\n    updateChartData(data) {\n      this.fullData = data;\n      const categories = [...new Set(this.fullData.map(dt => moment(dt.report_date).format(\"ll\")).sort((a, b) => moment(a, \"ll\").valueOf() - moment(b, \"ll\").valueOf()))];\n      const transformedData = this.getPropertiesSeries();\n      this.chartOptions.xAxis.categories = categories;\n      this.chartOptions.series = transformedData;\n    },\n    getPropertiesSeries() {\n      return this.properties.map(({\n        prop,\n        color,\n        yAxis\n      }) => {\n        const groupedData = this.fullData.reduce((acc, item) => {\n          const date = item.report_date;\n          if (!acc[date]) {\n            acc[date] = {};\n          }\n          acc[date][prop] = (acc[date][prop] || 0) + item[prop];\n          return acc;\n        }, {});\n        const aggregatedValues = Object.entries(groupedData).map(([date, values]) => ({\n          name: moment(date).format(\"lll\"),\n          y: values[prop]\n        }));\n        return {\n          name: prop.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \"),\n          data: aggregatedValues,\n          color: color,\n          yAxis: yAxis || 0\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["moment","props","chartData","type","Array","default","properties","data","chartOptions","chart","backgroundColor","zoomType","height","title","text","align","accessibility","enabled","exporting","buttons","contextButton","menuItems","credits","legend","itemStyle","color","rangeSelector","navigator","scrollbar","xAxis","tickInterval","categories","labels","style","lineColor","lineWidth","showLastLabel","startOnTick","endOnTick","yAxis","gridLineColor","showFirstLabel","formatter","numericSymbols","value","symbolIndex","Math","floor","log10","scaledValue","pow","symbol","opposite","tooltip","x","format","points","map","point","series","name","y","toLocaleString","join","shared","useHTML","plotOptions","column","borderRadius","fullData","watch","handler","newChartData","oldChartData","updateChartData","deep","created","methods","Set","dt","report_date","sort","a","b","valueOf","transformedData","getPropertiesSeries","prop","groupedData","reduce","acc","item","date","aggregatedValues","Object","entries","values","split","word","charAt","toUpperCase","slice"],"sources":["/Users/rashmee/Desktop/usagm/heatmap/src/components/MainNegativeColumns.vue"],"sourcesContent":["<template>\n  <div>\n    <highcharts\n      :constructor-type=\"'stockChart'\"\n      class=\"hc\"\n      :options=\"chartOptions\"\n      ref=\"chart\"\n    ></highcharts>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\n\nexport default {\n  props: {\n    chartData: {\n      type: Array,\n      default: () => [],\n    },\n    properties: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      chartOptions: {\n        chart: {\n          backgroundColor: \"#fbfcf8\",\n          type: \"column\",\n          zoomType: \"x\",\n          height: \"100%\",\n        },\n        title: {\n          text: \"Fans Change\",\n          align: \"center\",\n        },\n        accessibility: {\n          enabled: false,\n        },\n        exporting: {\n          enabled: true,\n          buttons: {\n            contextButton: {\n              menuItems: [\n                \"viewFullscreen\",\n                \"printChart\",\n                \"separator\",\n                \"downloadPNG\",\n                \"downloadJPEG\",\n                \"separator\",\n                \"downloadPDF\",\n                \"downloadCSV\",\n              ],\n            },\n          },\n        },\n        credits: {\n          enabled: false,\n        },\n        legend: {\n          enabled: true,\n          itemStyle: {\n            color: \"#000\",\n          },\n        },\n        rangeSelector: {\n          enabled: false,\n        },\n        navigator: {\n          enabled: false,\n        },\n        scrollbar: {\n          enabled: false,\n        },\n        xAxis: {\n          tickInterval: 2,\n          categories: [],\n          labels: {\n            style: {\n              color: \"#000\",\n            },\n          },\n          lineColor: \"#000\",\n          lineWidth: 3,\n          showLastLabel: false,\n          startOnTick: true,\n          endOnTick: true,\n        },\n        yAxis: {\n          gridLineColor: \"#fbfcf8\",\n          lineColor: \"#000\",\n          lineWidth: 3,\n          showFirstLabel: false,\n          labels: {\n            style: {\n              color: \"#000\",\n            },\n            formatter() {\n              const numericSymbols = [\"K\", \"M\", \"G\", \"T\", \"P\", \"E\"];\n\n              if (this.value >= 1000) {\n                const symbolIndex = Math.floor(Math.log10(this.value) / 3);\n                const scaledValue = this.value / Math.pow(1000, symbolIndex);\n                const symbol = numericSymbols[symbolIndex - 1];\n                return `${scaledValue}${symbol}`;\n              }\n\n              return this.value;\n            },\n          },\n          title: {\n            text: \"\",\n          },\n          opposite: false,\n        },\n        tooltip: {\n          backgroundColor: \"#fbfcf8\",\n          style: { color: \"#000\" },\n          formatter() {\n            return (\n              `<b><u>${moment(this.x).format(\n                \"ddd, MMM D YYYY\"\n              )}</u></b><br/><br/>` +\n              this.points\n                .map(\n                  (point) => `${point.series.name}: ${point.y.toLocaleString()}`\n                )\n                .join(\"<br/>\")\n            );\n          },\n          shared: true,\n          useHTML: true,\n        },\n        plotOptions: {\n          column: {\n            borderRadius: \"25%\",\n          },\n        },\n        series: [],\n      },\n      fullData: [],\n    };\n  },\n  watch: {\n    chartData: {\n      handler(newChartData, oldChartData) {\n        if (newChartData !== oldChartData) {\n          this.updateChartData(newChartData);\n        }\n      },\n      deep: true,\n    },\n  },\n  created() {\n    this.updateChartData(this.chartData);\n  },\n  methods: {\n    updateChartData(data) {\n      this.fullData = data;\n      const categories = [\n        ...new Set(\n          this.fullData\n            .map((dt) => moment(dt.report_date).format(\"ll\"))\n            .sort(\n              (a, b) => moment(a, \"ll\").valueOf() - moment(b, \"ll\").valueOf()\n            )\n        ),\n      ];\n\n      const transformedData = this.getPropertiesSeries();\n\n      this.chartOptions.xAxis.categories = categories;\n      this.chartOptions.series = transformedData;\n    },\n    getPropertiesSeries() {\n      return this.properties.map(({ prop, color, yAxis }) => {\n        const groupedData = this.fullData.reduce((acc, item) => {\n          const date = item.report_date;\n          if (!acc[date]) {\n            acc[date] = {};\n          }\n          acc[date][prop] = (acc[date][prop] || 0) + item[prop];\n          return acc;\n        }, {});\n\n        const aggregatedValues = Object.entries(groupedData).map(\n          ([date, values]) => ({\n            name: moment(date).format(\"lll\"),\n            y: values[prop],\n          })\n        );\n\n        return {\n          name: prop\n            .split(\"_\")\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(\" \"),\n          data: aggregatedValues,\n          color: color,\n          yAxis: yAxis || 0,\n        };\n      });\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}