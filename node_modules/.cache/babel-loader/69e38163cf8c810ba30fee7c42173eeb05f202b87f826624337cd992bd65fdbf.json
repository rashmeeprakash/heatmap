{"ast":null,"code":"import \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\nimport { AgGridVue } from \"ag-grid-vue3\";\nexport default {\n  components: {\n    AgGridVue\n  },\n  props: {\n    chartData: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      colDefs: [],\n      rowData: [],\n      gridApi: null\n    };\n  },\n  watch: {\n    chartData: {\n      handler(newChartData, oldChartData) {\n        if (newChartData !== oldChartData) {\n          this.updateChartData(newChartData);\n        }\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.updateChartData(this.chartData);\n  },\n  methods: {\n    onFilterTextBoxChanged() {\n      if (this.gridApi) {\n        const filterText = document.getElementById(\"filter-text-box\").value;\n        this.gridApi.setQuickFilter(filterText);\n      }\n    },\n    onBtnExport() {\n      if (this.gridApi) {\n        this.gridApi.exportDataAsCsv();\n      }\n    },\n    onGridReady(params) {\n      this.gridApi = params.api;\n    },\n    async updateChartData(data) {\n      const aggregatedData = this.aggregateValues(data);\n      this.colDefs = [{\n        headerName: \"Service\",\n        field: \"service\",\n        width: 150\n      }, {\n        headerName: \"Website URL\",\n        field: \"website_url\",\n        width: 275,\n        cellRenderer: this.websiteUrlRenderer\n      }, {\n        headerName: \"Visits\",\n        field: \"visits\",\n        sort: \"desc\",\n        valueFormatter: this.addCommas\n      }, {\n        headerName: \"Article Views\",\n        field: \"article_views\",\n        valueFormatter: this.addCommas\n      }, {\n        headerName: \"Video Plays\",\n        field: \"video_play\",\n        valueFormatter: this.addCommas\n      }, {\n        headerName: \"Audio Plays\",\n        field: \"audio_play\",\n        valueFormatter: this.addCommas\n      }, {\n        headerName: \"Time Spent/Visit\",\n        field: \"time_spent_per_visit\",\n        valueFormatter: this.addCommas\n      }];\n      this.rowData = aggregatedData;\n    },\n    addCommas(params) {\n      if (params.value !== undefined && params.value !== null) {\n        return params.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      } else {\n        return params.value;\n      }\n    },\n    aggregateValues(data) {\n      const aggregatedRows = Object.values(data.reduce((aggregatedMap, item) => {\n        const key = `${item.service}-${item.account_url}`;\n        if (!aggregatedMap[key]) {\n          aggregatedMap[key] = {\n            service: item.service,\n            website_url: item.account_url,\n            visits: 0,\n            article_views: 0,\n            video_play: 0,\n            audio_play: 0,\n            time_spent_per_visit: 0\n          };\n        }\n        aggregatedMap[key].visits += item.visits;\n        aggregatedMap[key].article_views += item.article_views;\n        aggregatedMap[key].video_play += item.video_play;\n        aggregatedMap[key].audio_play += item.audio_play;\n        aggregatedMap[key].time_spent_per_visit += item.time_spent_per_visit;\n        return aggregatedMap;\n      }, {}));\n      return aggregatedRows;\n    },\n    websiteUrlRenderer(params) {\n      const url = params.value;\n      if (url) {\n        return `<a href=\"${url}\" target=\"_blank\">${url}</a>`;\n      } else {\n        return \"\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["AgGridVue","components","props","chartData","type","Array","default","data","colDefs","rowData","gridApi","watch","handler","newChartData","oldChartData","updateChartData","deep","mounted","methods","onFilterTextBoxChanged","filterText","document","getElementById","value","setQuickFilter","onBtnExport","exportDataAsCsv","onGridReady","params","api","aggregatedData","aggregateValues","headerName","field","width","cellRenderer","websiteUrlRenderer","sort","valueFormatter","addCommas","undefined","toString","replace","aggregatedRows","Object","values","reduce","aggregatedMap","item","key","service","account_url","website_url","visits","article_views","video_play","audio_play","time_spent_per_visit","url"],"sources":["/Users/rashmee/Desktop/usagm/heatmap/src/components/WebTab/AgGridVue.vue"],"sourcesContent":["<template>\n  <div class=\"data-table-container\">\n    <div class=\"d-flex justify-content-between\">\n      <input\n        type=\"text\"\n        class=\"mt-2 w-25 form-control-sm\"\n        id=\"filter-text-box\"\n        placeholder=\"Filter...\"\n        v-on:input=\"onFilterTextBoxChanged\"\n      />\n      <button class=\"btn btn-link\" v-on:click=\"onBtnExport\">\n        <font-awesome-icon icon=\"file-csv\" />\n      </button>\n    </div>\n\n    <ag-grid-vue\n      :rowData=\"rowData\"\n      :columnDefs=\"colDefs\"\n      style=\"width: 100%; height: 750px\"\n      class=\"ag-theme-quartz\"\n      :pagination=\"true\"\n      @grid-ready=\"onGridReady\"\n    />\n  </div>\n</template>\n\n<script>\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\nimport { AgGridVue } from \"ag-grid-vue3\";\n\nexport default {\n  components: {\n    AgGridVue,\n  },\n  props: {\n    chartData: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      colDefs: [],\n      rowData: [],\n      gridApi: null,\n    };\n  },\n  watch: {\n    chartData: {\n      handler(newChartData, oldChartData) {\n        if (newChartData !== oldChartData) {\n          this.updateChartData(newChartData);\n        }\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    this.updateChartData(this.chartData);\n  },\n  methods: {\n    onFilterTextBoxChanged() {\n      if (this.gridApi) {\n        const filterText = document.getElementById(\"filter-text-box\").value;\n        this.gridApi.setQuickFilter(filterText);\n      }\n    },\n    onBtnExport() {\n      if (this.gridApi) {\n        this.gridApi.exportDataAsCsv();\n      }\n    },\n    onGridReady(params) {\n      this.gridApi = params.api;\n    },\n    async updateChartData(data) {\n      const aggregatedData = this.aggregateValues(data);\n\n      this.colDefs = [\n        { headerName: \"Service\", field: \"service\", width: 150 },\n        {\n          headerName: \"Website URL\",\n          field: \"website_url\",\n          width: 275,\n          cellRenderer: this.websiteUrlRenderer,\n        },\n        {\n          headerName: \"Visits\",\n          field: \"visits\",\n          sort: \"desc\",\n          valueFormatter: this.addCommas,\n        },\n        {\n          headerName: \"Article Views\",\n          field: \"article_views\",\n          valueFormatter: this.addCommas,\n        },\n        {\n          headerName: \"Video Plays\",\n          field: \"video_play\",\n          valueFormatter: this.addCommas,\n        },\n        {\n          headerName: \"Audio Plays\",\n          field: \"audio_play\",\n          valueFormatter: this.addCommas,\n        },\n        {\n          headerName: \"Time Spent/Visit\",\n          field: \"time_spent_per_visit\",\n          valueFormatter: this.addCommas,\n        },\n      ];\n      this.rowData = aggregatedData;\n    },\n    addCommas(params) {\n      if (params.value !== undefined && params.value !== null) {\n        return params.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      } else {\n        return params.value;\n      }\n    },\n    aggregateValues(data) {\n      const aggregatedRows = Object.values(\n        data.reduce((aggregatedMap, item) => {\n          const key = `${item.service}-${item.account_url}`;\n          if (!aggregatedMap[key]) {\n            aggregatedMap[key] = {\n              service: item.service,\n              website_url: item.account_url,\n              visits: 0,\n              article_views: 0,\n              video_play: 0,\n              audio_play: 0,\n              time_spent_per_visit: 0,\n            };\n          }\n          aggregatedMap[key].visits += item.visits;\n          aggregatedMap[key].article_views += item.article_views;\n          aggregatedMap[key].video_play += item.video_play;\n          aggregatedMap[key].audio_play += item.audio_play;\n          aggregatedMap[key].time_spent_per_visit += item.time_spent_per_visit;\n\n          return aggregatedMap;\n        }, {})\n      );\n\n      return aggregatedRows;\n    },\n    websiteUrlRenderer(params) {\n      const url = params.value;\n      if (url) {\n        return `<a href=\"${url}\" target=\"_blank\">${url}</a>`;\n      } else {\n        return \"\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add scoped styles if needed */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}